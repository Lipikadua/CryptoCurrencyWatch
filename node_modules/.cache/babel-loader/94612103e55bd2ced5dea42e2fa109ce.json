{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\cryptocurrencyUpdate\\\\src\\\\pages\\\\CurrencyDetailPage.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable camelcase */\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport HistoryChart from \"../components/HistoryChart\";\nimport CurrencyDetail from \"../components/CurrencyDetail\";\nimport coinrankingApi from \"../apis/coinrankingApi\";\nimport isEmpty from \"../utils/is-empty\";\nimport DetailsCurrencyButton from \"../components/DetailsCurrencyButton\";\n\nconst CurrencyDetailPage = () => {\n  _s();\n\n  // eslint-disable-next-line camelcase\n  const {\n    coin_id\n  } = useParams();\n  const [currencyData, setCurrencyData] = useState({});\n  const [currencyName, setCurrencyName] = useState(\"USD\");\n  const [currencySymbol, setCurrencySymbol] = useState(\"$\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [exchangeRate, setExchangeRate] = useState(1);\n\n  const formatData = data => {\n    return data.map(element => {\n      return {\n        t: element[\"timestamp\"],\n        y: element[\"price\"]\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const [day, week, month, year, fiveYear, details] = await Promise.all([coinrankingApi.get(`coin/${coin_id}/history/24h`), coinrankingApi.get(`coin/${coin_id}/history/7d`), coinrankingApi.get(`coin/${coin_id}/history/30d`), coinrankingApi.get(`coin/${coin_id}/history/1y`), coinrankingApi.get(`coin/${coin_id}/history/5y`), coinrankingApi.get(`coin/${coin_id}`)]);\n      console.log(\"formatData\", formatData(fiveYear.data.data.history));\n      setCurrencyData({\n        day: formatData(day.data.data.history),\n        week: formatData(week.data.data.history),\n        month: formatData(month.data.data.history),\n        year: formatData(year.data.data.history),\n        fiveYear: formatData(fiveYear.data.data.history),\n        details: details.data.data\n      });\n      setIsLoading(false);\n      console.log(\"day\", day.data.data.history);\n      console.log(\"pricefromset\", details.data.data[\"coin\"][\"price\"]);\n    };\n\n    fetchData();\n  }, [coin_id]);\n\n  const renderData = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    } else if (isEmpty(currencyData)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" wait for while....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DetailsCurrencyButton, {\n          setCurrencyName: setCurrencyName,\n          setCurrencySymbol: setCurrencySymbol,\n          setExchangeRate: setExchangeRate,\n          currencyName: currencyName,\n          currencySymbol: currencySymbol,\n          exchangeRate: exchangeRate,\n          name: `${currencyData.details[\"coin\"][\"name\"]}-Details`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cryptoList\",\n          children: [/*#__PURE__*/_jsxDEV(HistoryChart, {\n            data: currencyData,\n            currencySymbol: currencySymbol,\n            currencyName: currencyName,\n            exchangeRate: exchangeRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyDetail, {\n            data: currencyData.details,\n            currencySymbol: currencySymbol,\n            currencyName: currencyName,\n            exchangeRate: exchangeRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  return renderData();\n};\n\n_s(CurrencyDetailPage, \"QOfR1SWfh60a5YBek8KI/QIlWxo=\", false, function () {\n  return [useParams];\n});\n\n_c = CurrencyDetailPage;\nexport default CurrencyDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyDetailPage\");","map":{"version":3,"sources":["D:/React/cryptocurrencyUpdate/src/pages/CurrencyDetailPage.jsx"],"names":["React","useEffect","useState","useParams","HistoryChart","CurrencyDetail","coinrankingApi","isEmpty","DetailsCurrencyButton","CurrencyDetailPage","coin_id","currencyData","setCurrencyData","currencyName","setCurrencyName","currencySymbol","setCurrencySymbol","isLoading","setIsLoading","exchangeRate","setExchangeRate","formatData","data","map","element","t","y","fetchData","day","week","month","year","fiveYear","details","Promise","all","get","console","log","history","renderData"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport HistoryChart from \"../components/HistoryChart\";\r\nimport CurrencyDetail from \"../components/CurrencyDetail\";\r\nimport coinrankingApi from \"../apis/coinrankingApi\";\r\nimport isEmpty from \"../utils/is-empty\";\r\nimport DetailsCurrencyButton from \"../components/DetailsCurrencyButton\";\r\n\r\nconst CurrencyDetailPage = () => {\r\n  // eslint-disable-next-line camelcase\r\n  const { coin_id } = useParams();\r\n\r\n  const [currencyData, setCurrencyData] = useState({});\r\n  const [currencyName, setCurrencyName] = useState(\"USD\");\r\n  const [currencySymbol, setCurrencySymbol] = useState(\"$\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [exchangeRate, setExchangeRate] = useState(1);\r\n\r\n  const formatData = (data) => {\r\n    return data.map((element) => {\r\n      return {\r\n        t: element[\"timestamp\"],\r\n        y: element[\"price\"],\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const [day, week, month, year, fiveYear, details] = await Promise.all([\r\n        coinrankingApi.get(`coin/${coin_id}/history/24h`),\r\n\r\n        coinrankingApi.get(`coin/${coin_id}/history/7d`),\r\n\r\n        coinrankingApi.get(`coin/${coin_id}/history/30d`),\r\n\r\n        coinrankingApi.get(`coin/${coin_id}/history/1y`),\r\n\r\n        coinrankingApi.get(`coin/${coin_id}/history/5y`),\r\n\r\n        coinrankingApi.get(`coin/${coin_id}`),\r\n      ]);\r\n\r\n      console.log(\"formatData\", formatData(fiveYear.data.data.history));\r\n\r\n      setCurrencyData({\r\n        day: formatData(day.data.data.history),\r\n        week: formatData(week.data.data.history),\r\n        month: formatData(month.data.data.history),\r\n        year: formatData(year.data.data.history),\r\n        fiveYear: formatData(fiveYear.data.data.history),\r\n        details: details.data.data,\r\n      });\r\n\r\n      setIsLoading(false);\r\n\r\n      console.log(\"day\", day.data.data.history);\r\n      console.log(\"pricefromset\", details.data.data[\"coin\"][\"price\"]);\r\n    };\r\n\r\n    fetchData();\r\n  }, [coin_id]);\r\n\r\n  const renderData = () => {\r\n    if (isLoading) {\r\n      return <div>Loading....</div>;\r\n    } else if (isEmpty(currencyData)) {\r\n      return <div> wait for while....</div>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <DetailsCurrencyButton\r\n            setCurrencyName={setCurrencyName}\r\n            setCurrencySymbol={setCurrencySymbol}\r\n            setExchangeRate={setExchangeRate}\r\n            currencyName={currencyName}\r\n            currencySymbol={currencySymbol}\r\n            exchangeRate={exchangeRate}\r\n            name={`${currencyData.details[\"coin\"][\"name\"]}-Details`}\r\n          />\r\n          <div className=\"cryptoList\">\r\n            <HistoryChart\r\n              data={currencyData}\r\n              currencySymbol={currencySymbol}\r\n              currencyName={currencyName}\r\n              exchangeRate={exchangeRate}\r\n            />\r\n\r\n            <CurrencyDetail\r\n              data={currencyData.details}\r\n              currencySymbol={currencySymbol}\r\n              currencyName={currencyName}\r\n              exchangeRate={exchangeRate}\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return renderData();\r\n};\r\n\r\nexport default CurrencyDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}