[{"D:\\React\\CryptoCurrencyWatch\\src\\index.js":"1","D:\\React\\CryptoCurrencyWatch\\src\\App.jsx":"2","D:\\React\\CryptoCurrencyWatch\\src\\components\\NavBar.js":"3","D:\\React\\CryptoCurrencyWatch\\src\\pages\\HomePage.jsx":"4","D:\\React\\CryptoCurrencyWatch\\src\\pages\\CurrencyDetailPage.jsx":"5","D:\\React\\CryptoCurrencyWatch\\src\\components\\Pagination.js":"6","D:\\React\\CryptoCurrencyWatch\\src\\apis\\coinrankingApi.js":"7","D:\\React\\CryptoCurrencyWatch\\src\\utils\\is-empty.js":"8","D:\\React\\CryptoCurrencyWatch\\src\\components\\HomeCurrencyButton.jsx":"9","D:\\React\\CryptoCurrencyWatch\\src\\components\\HistoryChart.jsx":"10","D:\\React\\CryptoCurrencyWatch\\src\\components\\NavCurrency.jsx":"11","D:\\React\\CryptoCurrencyWatch\\src\\components\\CurrencyDetail.jsx":"12","D:\\React\\CryptoCurrencyWatch\\src\\components\\DetailsCurrencyButton.jsx":"13","D:\\React\\CryptoCurrencyWatch\\src\\hoc\\withCurrencyConvert.js":"14","D:\\React\\CryptoCurrencyWatch\\src\\chartConfigs\\chartConfigs.js":"15"},{"size":230,"mtime":1609703000927,"results":"16","hashOfConfig":"17"},{"size":640,"mtime":1609702142512,"results":"18","hashOfConfig":"17"},{"size":653,"mtime":1609699159917,"results":"19","hashOfConfig":"17"},{"size":2340,"mtime":1609707574044,"results":"20","hashOfConfig":"17"},{"size":3505,"mtime":1609707657577,"results":"21","hashOfConfig":"17"},{"size":672,"mtime":1609699159918,"results":"22","hashOfConfig":"17"},{"size":121,"mtime":1609699159904,"results":"23","hashOfConfig":"17"},{"size":230,"mtime":1609699159922,"results":"24","hashOfConfig":"17"},{"size":895,"mtime":1609703371472,"results":"25","hashOfConfig":"17"},{"size":3630,"mtime":1609699159915,"results":"26","hashOfConfig":"17"},{"size":3954,"mtime":1609704186277,"results":"27","hashOfConfig":"17"},{"size":3027,"mtime":1609704151984,"results":"28","hashOfConfig":"17"},{"size":943,"mtime":1609699159915,"results":"29","hashOfConfig":"17"},{"size":1490,"mtime":1609703354135,"results":"30","hashOfConfig":"17"},{"size":475,"mtime":1609699159913,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jy983r",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\CryptoCurrencyWatch\\src\\index.js",[],["64","65","66"],"D:\\React\\CryptoCurrencyWatch\\src\\App.jsx",[],"D:\\React\\CryptoCurrencyWatch\\src\\components\\NavBar.js",[],"D:\\React\\CryptoCurrencyWatch\\src\\pages\\HomePage.jsx",[],"D:\\React\\CryptoCurrencyWatch\\src\\pages\\CurrencyDetailPage.jsx",[],"D:\\React\\CryptoCurrencyWatch\\src\\components\\Pagination.js",[],"D:\\React\\CryptoCurrencyWatch\\src\\apis\\coinrankingApi.js",[],"D:\\React\\CryptoCurrencyWatch\\src\\utils\\is-empty.js",[],"D:\\React\\CryptoCurrencyWatch\\src\\components\\HomeCurrencyButton.jsx",[],"D:\\React\\CryptoCurrencyWatch\\src\\components\\HistoryChart.jsx",["67"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { historyOptions } from \"../chartConfigs/chartConfigs\";\r\nimport TrendDown from \"../assets/trending-down.png\";\r\nimport TrendUp from \"../assets/trending-up.png\";\r\n// import ExchangeRate from 'react-currency-conversion';\r\n\r\nconst HistoryChart = ({ data, currencySymbol, currencyName, exchangeRate }) => {\r\n  const chartRef = useRef();\r\n  const { day, week, month, year, fiveYear, details } = data;\r\n  console.log(\"currencynameochang\", currencyName);\r\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n  const determineTimeFormat = () => {\r\n    switch (timeFormat) {\r\n      case \"24h\":\r\n        return day;\r\n      case \"7d\":\r\n        return week;\r\n      case \"30d\":\r\n        return month;\r\n      case \"1y\":\r\n        return year;\r\n      case \"5y\":\r\n        return fiveYear;\r\n      default:\r\n        return day;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chartRef && chartRef.current && details) {\r\n      const chartInstance = new Chart(chartRef.current, {\r\n        type: \"line\",\r\n        data: {\r\n          datasets: [\r\n            {\r\n              label: `${details[\"coin\"][\"name\"]} Time vs Price`,\r\n              data: determineTimeFormat(),\r\n              backgroundColor: \"rgba(174, 404,494,0.6)\",\r\n              borderColor: \"rgba(174, 205, 274, 0.4)\",\r\n              pointRadius: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          ...historyOptions,\r\n        },\r\n      });\r\n    }\r\n  });\r\n\r\n  // console.log('currentPrice', currentPrice.price);\r\n  // console.log('CurrenyPrice' , currencyPrice.price);\r\n\r\n  const renderPrice = () => {\r\n    if (details) {\r\n      return (\r\n        <div>\r\n          <p\r\n            className=\"my-0 mb-0\"\r\n            style={{ color: \"darkcyan\", fontWeight: \"20px\" }}\r\n          >\r\n            {currencySymbol} &nbsp;\r\n            {parseFloat(details[\"coin\"][\"price\"] * exchangeRate).toFixed(2)}\r\n            &nbsp;{currencyName}\r\n          </p>\r\n          <span\r\n            className={\r\n              details[\"coin\"][\"change\"] < 0\r\n                ? \"text-danger my-0\"\r\n                : \"text-success my-0\"\r\n            }\r\n          >\r\n            {details[\"coin\"][\"change\"]}%\r\n            <img\r\n              style={{ width: \"30px\" }}\r\n              src={details[\"coin\"][\"change\"] < 0 ? TrendDown : TrendUp}\r\n              alt=\"trend\"\r\n            />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white border mt-2 p-3\">\r\n      <div>{renderPrice()}</div>\r\n\r\n      <div>\r\n        <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n      </div>\r\n\r\n      <div className=\"chart-button mt-1\">\r\n        <button\r\n          onClick={() => setTimeFormat(\"24h\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          24h\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"7d\")}\r\n          className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n        >\r\n          7d\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"30d\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          30d\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"1y\")}\r\n          className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n        >\r\n          1y\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"5y\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          5y\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryChart;\r\n","D:\\React\\CryptoCurrencyWatch\\src\\components\\NavCurrency.jsx",[],"D:\\React\\CryptoCurrencyWatch\\src\\components\\CurrencyDetail.jsx",[],"D:\\React\\CryptoCurrencyWatch\\src\\components\\DetailsCurrencyButton.jsx",[],"D:\\React\\CryptoCurrencyWatch\\src\\hoc\\withCurrencyConvert.js",[],"D:\\React\\CryptoCurrencyWatch\\src\\chartConfigs\\chartConfigs.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":33,"column":13,"nodeType":"76","messageId":"77","endLine":33,"endColumn":26},"jsx-a11y/label-has-for",[],"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'chartInstance' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]