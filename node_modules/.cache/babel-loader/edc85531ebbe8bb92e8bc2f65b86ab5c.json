{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\cryptourrencywatch\\\\src\\\\components\\\\HistoryChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Chart from \"chart.js\";\nimport { historyOptions } from \"../chartConfigs/chartConfigs\";\nimport TrendDown from \"../assets/trending-down.png\";\nimport TrendUp from \"../assets/trending-up.png\"; // import ExchangeRate from 'react-currency-conversion';\n\nconst HistoryChart = ({\n  data,\n  currencySymbol,\n  currencyName,\n  exchangeRate\n}) => {\n  _s();\n\n  const chartRef = useRef();\n  const {\n    day,\n    week,\n    month,\n    year,\n    fiveYear,\n    details\n  } = data;\n  console.log(\"currencynameochang\", currencyName);\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\n\n  const determineTimeFormat = () => {\n    switch (timeFormat) {\n      case \"24h\":\n        return day;\n\n      case \"7d\":\n        return week;\n\n      case \"30d\":\n        return month;\n\n      case \"1y\":\n        return year;\n\n      case \"5y\":\n        return fiveYear;\n\n      default:\n        return day;\n    }\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current && details) {\n      const chartInstance = new Chart(chartRef.current, {\n        type: \"line\",\n        data: {\n          datasets: [{\n            label: `${details[\"coin\"][\"name\"]} Time vs Price`,\n            data: determineTimeFormat(),\n            backgroundColor: \"rgba(174, 404,494,0.6)\",\n            borderColor: \"rgba(174, 205, 274, 0.4)\",\n            pointRadius: 1\n          }]\n        },\n        options: { ...historyOptions\n        }\n      });\n    }\n  }); // console.log('currentPrice', currentPrice.price);\n  // console.log('CurrenyPrice' , currencyPrice.price);\n\n  const renderPrice = () => {\n    if (details) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-0 mb-0\",\n          style: {\n            color: \"darkcyan\",\n            fontWeight: \"20px\"\n          },\n          children: [currencySymbol, \" \\xA0\", parseFloat(details[\"coin\"][\"price\"] * exchangeRate).toFixed(2), \"\\xA0\", currencyName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: details[\"coin\"][\"change\"] < 0 ? \"text-danger my-0\" : \"text-success my-0\",\n          children: [details[\"coin\"][\"change\"], \"%\", /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"30px\"\n            },\n            src: details[\"coin\"][\"change\"] < 0 ? TrendDown : TrendUp,\n            alt: \"trend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border mt-2 p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderPrice()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"myChart\",\n        width: 250,\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-button mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"24h\"),\n        className: \"btn btn-outline-secondary btn-sm\",\n        children: \"24h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"7d\"),\n        className: \"btn btn-outline-secondary btn-sm mx-1\",\n        children: \"7d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"30d\"),\n        className: \"btn btn-outline-secondary btn-sm\",\n        children: \"30d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"1y\"),\n        className: \"btn btn-outline-secondary btn-sm mx-1\",\n        children: \"1y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeFormat(\"5y\"),\n        className: \"btn btn-outline-secondary btn-sm\",\n        children: \"5y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HistoryChart, \"QUAhcve7AqTX7QOQ/03kwop9URk=\");\n\n_c = HistoryChart;\nexport default HistoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryChart\");","map":{"version":3,"sources":["D:/React/cryptourrencywatch/src/components/HistoryChart.jsx"],"names":["React","useRef","useEffect","useState","Chart","historyOptions","TrendDown","TrendUp","HistoryChart","data","currencySymbol","currencyName","exchangeRate","chartRef","day","week","month","year","fiveYear","details","console","log","timeFormat","setTimeFormat","determineTimeFormat","current","chartInstance","type","datasets","label","backgroundColor","borderColor","pointRadius","options","renderPrice","color","fontWeight","parseFloat","toFixed","width"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { historyOptions } from \"../chartConfigs/chartConfigs\";\r\nimport TrendDown from \"../assets/trending-down.png\";\r\nimport TrendUp from \"../assets/trending-up.png\";\r\n// import ExchangeRate from 'react-currency-conversion';\r\n\r\nconst HistoryChart = ({ data, currencySymbol, currencyName, exchangeRate }) => {\r\n  const chartRef = useRef();\r\n  const { day, week, month, year, fiveYear, details } = data;\r\n  console.log(\"currencynameochang\", currencyName);\r\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n  const determineTimeFormat = () => {\r\n    switch (timeFormat) {\r\n      case \"24h\":\r\n        return day;\r\n      case \"7d\":\r\n        return week;\r\n      case \"30d\":\r\n        return month;\r\n      case \"1y\":\r\n        return year;\r\n      case \"5y\":\r\n        return fiveYear;\r\n      default:\r\n        return day;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chartRef && chartRef.current && details) {\r\n      const chartInstance = new Chart(chartRef.current, {\r\n        type: \"line\",\r\n        data: {\r\n          datasets: [\r\n            {\r\n              label: `${details[\"coin\"][\"name\"]} Time vs Price`,\r\n              data: determineTimeFormat(),\r\n              backgroundColor: \"rgba(174, 404,494,0.6)\",\r\n              borderColor: \"rgba(174, 205, 274, 0.4)\",\r\n              pointRadius: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          ...historyOptions,\r\n        },\r\n      });\r\n    }\r\n  });\r\n\r\n  // console.log('currentPrice', currentPrice.price);\r\n  // console.log('CurrenyPrice' , currencyPrice.price);\r\n\r\n  const renderPrice = () => {\r\n    if (details) {\r\n      return (\r\n        <div>\r\n          <p\r\n            className=\"my-0 mb-0\"\r\n            style={{ color: \"darkcyan\", fontWeight: \"20px\" }}\r\n          >\r\n            {currencySymbol} &nbsp;\r\n            {parseFloat(details[\"coin\"][\"price\"] * exchangeRate).toFixed(2)}\r\n            &nbsp;{currencyName}\r\n          </p>\r\n          <span\r\n            className={\r\n              details[\"coin\"][\"change\"] < 0\r\n                ? \"text-danger my-0\"\r\n                : \"text-success my-0\"\r\n            }\r\n          >\r\n            {details[\"coin\"][\"change\"]}%\r\n            <img\r\n              style={{ width: \"30px\" }}\r\n              src={details[\"coin\"][\"change\"] < 0 ? TrendDown : TrendUp}\r\n              alt=\"trend\"\r\n            />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white border mt-2 p-3\">\r\n      <div>{renderPrice()}</div>\r\n\r\n      <div>\r\n        <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n      </div>\r\n\r\n      <div className=\"chart-button mt-1\">\r\n        <button\r\n          onClick={() => setTimeFormat(\"24h\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          24h\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"7d\")}\r\n          className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n        >\r\n          7d\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"30d\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          30d\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"1y\")}\r\n          className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n        >\r\n          1y\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"5y\")}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          5y\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryChart;\r\n"]},"metadata":{},"sourceType":"module"}